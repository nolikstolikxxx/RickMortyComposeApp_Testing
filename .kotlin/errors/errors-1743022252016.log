kotlin version: 2.0.0
error message: Incremental compilation failed: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=ListLocationsView, scope=com.example.m19_testing_homework_ver1.ui), LookupSymbol(name=Companion, scope=com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion), LookupSymbol(name=ListLocationsViewPreview, scope=com.example.m19_testing_homework_ver1.ui), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion), LookupSymbol(name=NO_INTERNET_BUTTON, scope=com.example.m19_testing_homework_ver1.ui), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.m19_testing_homework_ver1.ui), LookupSymbol(name=ListLocationsViewKt, scope=com.example.m19_testing_homework_ver1.ui)], dirtyClassesFqNames=[com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion.Companion, com.example.m19_testing_homework_ver1.ui.ListLocationsViewKt, com.example.m19_testing_homework_ver1.ui, com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion], dirtyClassesFqNamesForceRecompile=[])
java.lang.IllegalStateException: The following FqNames can't be derived from DirtyData.dirtyLookupSymbols: com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion.
DirtyData = DirtyData(dirtyLookupSymbols=[LookupSymbol(name=ListLocationsView, scope=com.example.m19_testing_homework_ver1.ui), LookupSymbol(name=Companion, scope=com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion), LookupSymbol(name=ListLocationsViewPreview, scope=com.example.m19_testing_homework_ver1.ui), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion), LookupSymbol(name=NO_INTERNET_BUTTON, scope=com.example.m19_testing_homework_ver1.ui), LookupSymbol(name=<SAM-CONSTRUCTOR>, scope=com.example.m19_testing_homework_ver1.ui), LookupSymbol(name=ListLocationsViewKt, scope=com.example.m19_testing_homework_ver1.ui)], dirtyClassesFqNames=[com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion.Companion, com.example.m19_testing_homework_ver1.ui.ListLocationsViewKt, com.example.m19_testing_homework_ver1.ui, com.example.m19_testing_homework_ver1.ui.ListLocationsViewCompanion], dirtyClassesFqNamesForceRecompile=[])
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.toProgramSymbols(ClasspathChangesComputer.kt:381)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeFineGrainedKotlinClassChanges(ClasspathChangesComputer.kt:281)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeKotlinClassChanges(ClasspathChangesComputer.kt:181)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClassChanges(ClasspathChangesComputer.kt:154)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeChangedAndImpactedSet(ClasspathChangesComputer.kt:104)
	at org.jetbrains.kotlin.incremental.classpathDiff.ClasspathChangesComputer.computeClasspathChanges(ClasspathChangesComputer.kt:72)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompileImpl(IncrementalJvmCompilerRunner.kt:194)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:132)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.calculateSourcesToCompile(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally$lambda$9$compile(IncrementalCompilerRunner.kt:225)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.tryCompileIncrementally(IncrementalCompilerRunner.kt:267)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:120)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)


